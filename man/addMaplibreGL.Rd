% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/maplibre.R
\name{maplibreOptions}
\alias{maplibreOptions}
\alias{addMaplibreGL}
\title{Adds a MapLibre GL layer to a Leaflet map}
\usage{
maplibreOptions(
  attribution = "",
  layers = NULL,
  layerDefs = NULL,
  opacity = 1,
  position = "front",
  maxZoom = NULL,
  minZoom = NULL,
  dynamicLayers = NULL,
  proxy = NULL,
  useCors = TRUE,
  ...
)

addMaplibreGL(
  map,
  style = "https://maputnik.github.io/osm-liberty/style.json",
  layerId = NULL,
  group = NULL,
  setView = TRUE,
  options = maplibreOptions()
)
}
\arguments{
\item{attribution}{Attribution from service metadata copyright text is automatically displayed in Leaflet's default control. This property can be used for customization.}

\item{layers}{An array of Layer IDs like \link{3, 4, 5} to show from the service.}

\item{layerDefs}{A string representing a query to run against the service before the image is rendered. This can be a string like "3:STATE_NAME="Kansas"" or an object mapping different queries to specific layers {3:"STATE_NAME="Kansas"", 2:"POP2007>25000"}.}

\item{opacity}{Opacity of the layer. Should be a value between 0 (completely transparent) and 1 (completely opaque).}

\item{position}{Position of the layer relative to other overlays.}

\item{maxZoom}{Closest zoom level the layer will be displayed on the map.}

\item{minZoom}{Furthest zoom level the layer will be displayed on the map.}

\item{dynamicLayers}{JSON object literal used to manipulate the layer symbology defined in the service itself. Requires a 10.1 (or above) map service which supports dynamicLayers requests.}

\item{useCors}{If this service should use CORS when making GET requests.}

\item{...}{Other options to pass to Maplibre GL JS.}

\item{map}{The Leaflet R object (see \code{\link[leaflet:leaflet]{leaflet::leaflet()}}).}

\item{style}{Tile vector URL; can begin with \verb{http://} or \verb{https://}.}

\item{layerId}{A layer ID; see
\href{https://rstudio.github.io/leaflet/showhide.html}{docs}.}

\item{group}{The name of the group the newly created layer should belong to
(for \code{\link[leaflet:remove]{leaflet::clearGroup()}} and \code{\link[leaflet:addLayersControl]{leaflet::addLayersControl()}} purposes).
(Warning: Due to the way Leaflet and MapLibre GL JS integrate, showing/hiding
a GL layer may give unexpected results.)}

\item{setView}{If \code{TRUE} (the default), drive the map to the center/zoom
specified in the style (if any). Note that this will override any
\code{\link[leaflet:map-methods]{leaflet::setView()}} or \code{\link[leaflet:map-methods]{leaflet::fitBounds()}} calls that occur between
the \code{addMaplibreGL} call and when the style finishes loading; use
\code{setView=FALSE} in those cases.}

\item{options}{A list of Map options. See the
\href{https://maplibre.org/maplibre-gl-js-docs/api/#map}{MapLibre GL JS documentation}
for more details. Not all options may work in the context of Leaflet.}

\item{token}{If you pass a token in your options it will be included in all requests to the service.}
}
\description{
Uses the \href{https://github.com/maplibre/maplibre-gl-leaflet}{MapLibre GL Leaflet plugin}
to add a MapLibre GL layer to a Leaflet map.
}
\examples{

library(leaflet)
\donttest{
leaflet() \%>\%
  addMaplibreGL(style = "https://demotiles.maplibre.org/style.json")
}
}
